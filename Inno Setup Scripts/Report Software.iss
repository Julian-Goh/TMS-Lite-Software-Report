; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "TMS-Lite Software (Report)"
#define NewShortcutName "TMS-Lite Software (Report) v.1.2.0"
#define MyAppVersion "1.2.0"
#define MyAppPublisher "TMS-Lite Sdn Bhd"
#define MyAppExeName "TMS-Lite Software (Report).exe"
#define MySourcePath "C:\Users\User\Documents\GitHub\TMS-Lite-Software-Report\dist\TMS-Lite Software (Report) v.1.2.0"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{2454D34D-1381-4DEB-A20E-417C77CD32FE}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName}
AppVerName={#MyAppName} v.{#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={autopf}\{#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputDir=C:\Users\User\Documents\GitHub\TMS-Lite-Software-Report\Inno Setup Installer exe
OutputBaseFilename={#MyAppName} v.{#MyAppVersion} Installer
;SetupIconFile={#MySourcePath}\TMS Icon\logo4.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
UninstallDisplayIcon={#MySourcePath}\TMS Icon\logo4.ico

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "{#MySourcePath}\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#MySourcePath}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#NewShortcutName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[InstallDelete]
Type: files; Name: "{userdesktop}\TMS-Lite Software (Report) v.1.0.3.lnk"
Type: files; Name: "{commondesktop}\TMS-Lite Software (Report) v.1.0.3.lnk"

Type: files; Name: "{userdesktop}\TMS-Lite Software (Report) v.1.1.0.lnk"
Type: files; Name: "{commondesktop}\TMS-Lite Software (Report) v.1.1.0.lnk"

Type: files; Name: "{userdesktop}\TMS-Lite Software (Report) v.1.1.1.lnk"
Type: files; Name: "{commondesktop}\TMS-Lite Software (Report) v.1.1.1.lnk"

[Code]
function GetUninstallString: string;
var
  sUnInstPath: string;
  sUnInstallString: String;
begin
  Result := '';
  sUnInstPath := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{{2454D34D-1381-4DEB-A20E-417C77CD32FE}_is1'); { Your App GUID/ID }
  sUnInstallString := '';
  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then
    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);
  Result := sUnInstallString;
end;

function IsUpgrade: Boolean;
begin
  Result := (GetUninstallString() <> '');
end;

function InitializeSetup: Boolean;
var
  V: Integer;
  iResultCode: Integer;
  sUnInstallString: string;
begin
  Result := True; { in case when no previous version is found }
  if RegValueExists(HKEY_LOCAL_MACHINE,'Software\Microsoft\Windows\CurrentVersion\Uninstall\{2454D34D-1381-4DEB-A20E-417C77CD32FE}_is1', 'UninstallString') then  { Your App GUID/ID }
  begin
    V := MsgBox(ExpandConstant('An old version of the app was detected!'+ #13#10 + 'Uninstall is required to proceed.' + #13#10 + #13#10 + 'Do you want to uninstall it?'), mbInformation, MB_YESNO); { Custom Message if App installed }
    if V = IDYES then
    begin
      sUnInstallString := GetUninstallString();
      sUnInstallString :=  RemoveQuotes(sUnInstallString);
      Exec(ExpandConstant(sUnInstallString), '/VERYSILENT /NORESTART /SUPPRESSMSGBOXES', '', SW_HIDE, ewWaitUntilTerminated, iResultCode);
      Result := True; { if you want to proceed after uninstall }
      { Exit; //if you want to quit after uninstall }
    end
    else
      Result := False; { when older version present and not uninstalled }
  end;
end;